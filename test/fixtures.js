
// maps the original name to the alternate API
exports.mapFunc = {
	Admin_asyncEnabled: 'asyncEnabled',
	Admin_availableFunctions: 'availableFunctions',
	AdminLog_subscribe: 'log.subscribe',
	AdminLog_unsubscribe: 'log.unsubscribe',
	Allocator_bytesAllocated: 'allocator.bytesAllocated',
	Allocator_snapshot: 'allocator.snapshot',
	AuthorizedPasswords_add: 'authorizedPasswords.add',
	AuthorizedPasswords_list: 'authorizedPasswords.list',
	AuthorizedPasswords_remove: 'authorizedPasswords.remove',
	Core_exit: 'core.exit',
	Core_initTunnel: 'core.initTunnel',
	InterfaceController_disconnectPeer: 'interfaceController.disconnectPeer',
	InterfaceController_peerStats: 'interfaceController.peerStats',
	IpTunnel_allowConnection: 'ipTunnel.allowConnection',
	IpTunnel_connectTo: 'ipTunnel.connectTo',
	IpTunnel_listConnections: 'ipTunnel.listConnections',
	IpTunnel_removeConnection: 'ipTunnel.removeConnection',
	IpTunnel_showConnection: 'ipTunnel.showConnection',
	memory: 'memory',
	NodeStore_dumpTable: 'nodeStore.dumpTable',
	NodeStore_getLink: 'nodeStore.getLink',
	NodeStore_getRouteLabel: 'nodeStore.getRouteLabel',
	NodeStore_nodeForAddr: 'nodeStore.nodeForAddr',
	ping: 'ping',
	RainflyClient_addKey: 'rainflyClient.addKey',
	RainflyClient_addServer: 'rainflyClient.addServer',
	RainflyClient_minSignatures: 'rainflyClient.minSignatures',
	RouterModule_findNode: 'routerModule.findNode',
	RouterModule_getPeers: 'routerModule.getPeers',
	RouterModule_lookup: 'routerModule.lookup',
	RouterModule_pingNode: 'routerModule.pingNode',
	SearchRunner_showActiveSearch: 'searchRunner.showActiveSearch',
	Security_checkPermissions: 'security.checkPermissions',
	Security_dropPermissions: 'security.dropPermissions',
	Security_setUser: 'security.setUser',
	SessionManager_getHandles: 'sessionManager.getHandles',
	SessionManager_sessionStats: 'sessionManager.sessionStats',
	SwitchPinger_ping: 'switchPinger.ping',
	UDPInterface_beginConnection: 'udpInterface.beginConnection',
	UDPInterface_new: 'udpInterface.new'
};

// tests will check for existence of each of these functions
exports.allMembers = [
	'Admin_asyncEnabled',
	'asyncEnabled',
	'Admin_availableFunctions',
	'availableFunctions',
	'AdminLog_subscribe',
	'log.subscribe',
	'AdminLog_unsubscribe',
	'log.unsubscribe',
	'Allocator_bytesAllocated',
	'allocator.bytesAllocated',
	'Allocator_snapshot',
	'allocator.snapshot',
	'AuthorizedPasswords_add',
	'authorizedPasswords.add',
	'AuthorizedPasswords_list',
	'authorizedPasswords.list',
	'AuthorizedPasswords_remove',
	'authorizedPasswords.remove',
	'Core_exit',
	'core.exit',
	'Core_initTunnel',
	'core.initTunnel',
	'InterfaceController_disconnectPeer',
	'interfaceController.disconnectPeer',
	'InterfaceController_peerStats',
	'interfaceController.peerStats',
	'IpTunnel_allowConnection',
	'ipTunnel.allowConnection',
	'IpTunnel_connectTo',
	'ipTunnel.connectTo',
	'IpTunnel_listConnections',
	'ipTunnel.listConnections',
	'IpTunnel_removeConnection',
	'ipTunnel.removeConnection',
	'IpTunnel_showConnection',
	'ipTunnel.showConnection',
	'memory',
	'memory',
	'NodeStore_dumpTable',
	'nodeStore.dumpTable',
	'NodeStore_getLink',
	'nodeStore.getLink',
	'NodeStore_getRouteLabel',
	'nodeStore.getRouteLabel',
	'NodeStore_nodeForAddr',
	'nodeStore.nodeForAddr',
	'ping',
	'ping',
	'RainflyClient_addKey',
	'rainflyClient.addKey',
	'RainflyClient_addServer',
	'rainflyClient.addServer',
	'RainflyClient_minSignatures',
	'rainflyClient.minSignatures',
	'RouterModule_findNode',
	'routerModule.findNode',
	'RouterModule_getPeers',
	'routerModule.getPeers',
	'RouterModule_lookup',
	'routerModule.lookup',
	'RouterModule_pingNode',
	'routerModule.pingNode',
	'SearchRunner_showActiveSearch',
	'searchRunner.showActiveSearch',
	'Security_checkPermissions',
	'security.checkPermissions',
	'Security_dropPermissions',
	'security.dropPermissions',
	'Security_setUser',
	'security.setUser',
	'SessionManager_getHandles',
	'sessionManager.getHandles',
	'SessionManager_sessionStats',
	'sessionManager.sessionStats',
	'SwitchPinger_ping',
	'switchPinger.ping',
	'UDPInterface_beginConnection',
	'udpInterface.beginConnection',
	'UDPInterface_new',
	'udpInterface.new'
];
